Uses of Readme.md file
It helps to give long description of the project.
git is software installed local on system
github is web-based portal
git version 2.31.1.windows.1
git update (to update current version of git on local system)
Before pushing your code some other admin who is working on that pushed the code so your push gets rejected it shows there are updates and it doesn't allows us so we need to git pull before pushing
Diff b/w pull and clone=git pull is used to get updates complete repo is brought by git clone but pull brings the changes like adding files or changes made to files etc..
Best practise first use git pull before pushing
Git lifecycle ? ans: explain all the three stages
git clone=remote repo to local repo
git push=local repo to remote repo
for authentication between git and github we give personal access token which is available in settings-->developer settings-->personal access token
To do anything in git like commit we need to set global configuration by using git config --global user.name "name" and git config --global user.mail "email@gmail.com"
Branch=It is unique set of code changes & with unique name
git log = displays a record of the commits in a Git repository 
git status = The git status command displays the state of the working directory and the staging area
All uncommited files are visible in all branches & after commit they belong to branch where we have commited.
git cherry-Pick is used to picking single commit from one branch to others.
after cherrypick source commit still available after cherry-pick
When there are updates in both branches, merging of that both branches will open vi editor gets pop-up.We have a merge commit in git log.
When there are updates in same file in different branches, merging of that both branches will open vi editor as a merge conflict.
How do you handle the merge conflicts? ans: need to fix the conflicts and then commit the result.
when we want to merge the same files in different branches we have to give merge command from destination branch.  
git checkout or restore (concept)
User@DESKTOP-BJ50CGC MINGW64 /e/sep-04/GIT/reset (pig)
$ touch f1
User@DESKTOP-BJ50CGC MINGW64 /e/sep-04/GIT/reset (pig)
$ ls
f1
User@DESKTOP-BJ50CGC MINGW64 /e/sep-04/GIT/reset (pig)
$ cat f1
prasad
User@DESKTOP-BJ50CGC MINGW64 /e/sep-04/GIT/reset (pig)
$ vi f1
User@DESKTOP-BJ50CGC MINGW64 /e/sep-04/GIT/reset (pig)
$ cat f1
prasad
vimalaUser@DESKTOP-BJ50CGC MINGW64 /e/sep-04/GIT/reset (pig)
$ git status
On branch pig
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   f1
no changes added to commit (use "git add" and/or "git commit -a")
#In the above step we have not commited so the changes are in untracked stage"
#Now u want to remove changes u have done on file then use above one of two commands(git --restore or checkout)"
User@DESKTOP-BJ50CGC MINGW64 /e/sep-04/GIT/reset (pig)
$ git restore -- f1
User@DESKTOP-BJ50CGC MINGW64 /e/sep-04/GIT/reset (pig)
$ ls
f1
User@DESKTOP-BJ50CGC MINGW64 /e/sep-04/GIT/reset (pig)
$ cat f1
prasad
#Next case if we had committed file then we need to send file to working directory & then restore changes#
